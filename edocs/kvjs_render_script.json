{
  "kvjs": {
    "commonjs": "render_script", 
    "name": "render_script", 
    "title": "Script Renderer", 
    "type": "script"
  }, 
  "render_script": ";(function(){\n  \nvar ScriptRenderer = function(p) {\n  this.mustache = p.mustache;\n  this.doc = p.doc;\n  this.ddoc = p.ddoc;\n  this.template = this.ddoc.edocs.kvjs_render_script.template;\n  this.functions = (this.doc.kvjs && this.doc.kvjs.functions) || {};\n}\n\nScriptRenderer.prototype = {\n  indent: function(v, space) {\n    if (typeof v === \"string\") {\n      return v.replace(/\\n/g, \"\\n\" + space);\n    }\n    return v;\n  },\n  render_prototype: function() {\n    var lines = [], value;//, sorted = Object.keys(this.doc);\n    //sorted.sort();\n    for (var key in this.doc) {\n      if (['_id', '_rev', 'kvjs', 'constructor_fn', 'couchapp', '_revisions', 'module'].indexOf(key) !== -1) continue;\n      value = this.indent(this.functions[key] ? this.doc[key] : JSON.stringify(this.doc[key], null, 2), \"    \");\n      lines.push(\"    \" + JSON.stringify(key) + ': ' + value);\n    }\n    return \"{\\n\" + lines.join(\",\\n\") + \"\\n  }\"\n  },\n  render: function() {\n    return this.mustache.to_html(this.template, {\n      \"js_class\": this.doc.kvjs.js_class,\n      \"constructor_fn\": this.indent(this.doc.constructor_fn, \"  \"),\n      \"prototype\": this.render_prototype(),\n      \"doc_id\": this.doc._id\n    });\n  }\n};\n\nexports.ScriptRenderer = ScriptRenderer;\n\nexports.render = function(p) {\n  var script_renderer = new ScriptRenderer(p);\n  return script_renderer.render();\n};\n\n})(this);", 
  "template": ";(function() {\n  var {{{ js_class }}} = {{{ constructor_fn }}};\n  \n  if (exports) {\n    exports.{{{ js_class }}} = {{{ js_class }}};\n  } else {\n    this.{{{ doc_id }}} = {};\n    this.{{{ doc_id }}}.{{{ js_class }}} = {{{ js_class }}};\n  }\n  \n  {{{ js_class }}}.prototype = {{{ prototype }}};\n})(this);"
}