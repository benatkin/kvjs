{
  "edoc__id": "script_renderer", 
  "edoc_couchapp": {
    "manifest": [
      "env.json", 
      "script_renderer.js", 
      "template.js"
    ], 
    "objects": {}, 
    "signatures": {}
  }, 
  "env": {
    "page": {
      "name": "script_renderer", 
      "title": "Script Renderer"
    }, 
    "script": {
      "className": "ScriptRenderer", 
      "commonjs": true, 
      "type": "script"
    }
  }, 
  "script_renderer": ";(function(){\n  \nvar ScriptRenderer = function(p) {\n  this.doc = p.doc;\n  this.ddoc = p.ddoc;\n  this.mustache = this.ddoc.edoc_modules.mustache;\n  this.template = this.ddoc.edocs.script_renderer.template;\n  this.methods = (this.doc.env.script.methods) || {};\n};\n\nScriptRenderer.prototype = {\n  indent: function(v, space) {\n    if (typeof v === \"string\") {\n      return v.replace(/\\n/g, \"\\n\" + space);\n    }\n    return v;\n  },\n  render_methods: function() {\n    var lines = [], value, value_str;\n    for (var key in this.doc.methods) {\n      value = this.doc.methods[key];\n      value = this.indent(this.methods[key] ? value : JSON.stringify(value, null, 2), \"    \");\n      lines.push(\"    \" + JSON.stringify(key) + ': ' + value);\n    }\n    return \"{\\n\" + lines.join(\",\\n\") + \"\\n  }\"\n  },\n  render: function() {\n    return this.mustache.to_html(this.template, {\n      \"className\": this.doc.env.script.className,\n      \"construct\": this.indent(this.doc.construct, \"  \"),\n      \"methods\": this.render_methods(),\n      \"doc_id\": this.doc._id\n    });\n  }\n};\n\nif (typeof exports !== 'undefined') {\n  exports.ScriptRenderer = ScriptRenderer;\n} else {\n  this.env = (this.env || {});\n  this.env.ScriptRenderer = ScriptRenderer;\n}\n\n})(this);", 
  "template": ";(function() {\n  var {{{ className }}} = {{{ construct }}};\n  \n  if (exports) {\n    exports.{{{ className }}} = {{{ className }}};\n  } else {\n    this.{{{ doc_id }}} = {};\n    this.{{{ doc_id }}}.{{{ className }}} = {{{ className }}};\n  }\n  \n  {{{ className }}}.prototype = {{{ methods }}};\n})(this);"
}